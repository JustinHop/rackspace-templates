parameter_groups:
    -
        parameters:
            - image
            - flavor
        label: 'Server Settings'
    -
        parameters:
            - server_hostname
            - kitchen
            - chef_version
        label: rax-dev-params
heat_template_version: '2013-05-23'
description: "This is a Heat template to deploy a single Linux server running a Jenkins.\nAdditional nodes can also be deployed using this template.\n"
parameters:
    server_hostname:
        default: jenkins
        constraints:
            -
                length:
                    max: 64
                    min: 1
            -
                allowed_pattern: '^[a-zA-Z][a-zA-Z0-9-]*$'
                description: "Must begin with a letter and contain only alphanumeric characters.\n"
        type: string
        description: 'Sets the hostname of the server.'
        label: 'Server Name'
    image:
        default: 'Ubuntu 14.04 LTS (Trusty Tahr)'
        constraints:
            -
                description: 'Must be a supported operating system.'
                allowed_values:
                    - 'Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)'
                    - 'Ubuntu 14.04 LTS (Trusty Tahr)'
        type: string
        description: "Server image used for all servers that are created as a part of this\ndeployment\n"
        label: 'Operating System'
    chef_version:
        default: 11.16.4
        type: string
        description: 'Version of chef client to use'
        label: 'Chef Version'
    flavor:
        default: '4 GB General Purpose v1'
        constraints:
            -
                description: "Must be a valid Rackspace Cloud Server flavor for the region you have\nselected to deploy into.\n"
                allowed_values:
                    - '1 GB General Purpose v1'
                    - '2 GB General Purpose v1'
                    - '4 GB General Purpose v1'
                    - '8 GB General Purpose v1'
                    - '15 GB I/O v1'
                    - '30 GB I/O v1'
                    - '1GB Standard Instance'
                    - '2GB Standard Instance'
                    - '4GB Standard Instance'
                    - '8GB Standard Instance'
                    - '15GB Standard Instance'
                    - '30GB Standard Instance'
        type: string
        description: "Rackspace Cloud Server flavor to use. The size is based on the amount of\nRAM for the provisioned server.\n"
        label: 'Server Size'
    kitchen:
        default: 'https://github.com/rackspace-orchestration-templates/jenkins'
        type: string
        description: 'URL for the kitchen to use'
        label: Kitchen
outputs:
    private_key:
        description: 'SSH Private Key'
        value:
            get_attr:
                - ssh_key
                - private_key
    jenkins_http_url:
        description: 'Jenkins HTTP URL'
        value:
            str_replace:
                params:
                    '%server_ip%':
                        get_attr:
                            - jenkins_server
                            - accessIPv4
                template: 'http://%server_ip%:8080'
    server_ip:
        description: 'Server IP'
        value:
            get_attr:
                - jenkins_server
                - accessIPv4
    jenkins_https_url:
        description: 'Jenkins HTTPS URL'
        value:
            str_replace:
                params:
                    '%server_ip%':
                        get_attr:
                            - jenkins_server
                            - accessIPv4
                template: 'https://%server_ip%:8081'
resources:
    jenkins_server:
        type: 'Rackspace::Cloud::Server'
        properties:
            key_name:
                get_resource: ssh_key
            flavor:
                get_param: flavor
            name:
                get_param: server_hostname
            image:
                get_param: image
    ssh_key:
        type: 'OS::Nova::KeyPair'
        properties:
            name:
                get_param: 'OS::stack_id'
            save_private_key: true
    jenkins_setup:
        depends_on: jenkins_server
        type: 'OS::Heat::ChefSolo'
        properties:
            username: root
            node:
                jenkins:
                    master:
                        jenkins_args: '--httpsPort=8081'
                    executor:
                        timeout: 240
                run_list:
                    - 'recipe[apt]'
                    - 'recipe[build-essential]'
                    - 'recipe[git]'
                    - 'recipe[jenkins::master]'
                    - 'recipe[rax-jenkins::plugins]'
                    - 'recipe[rax-jenkins::rax-canon]'
                    - 'recipe[rax-firewall]'
                rax:
                    firewall:
                        tcp:
                            - 8080
                            - 8081
                    jenkins:
                        plugins:
                            - credentials
                            - ssh-credentials
                            - scm-api
                            - multiple-scms
                            - git-client
                            - git
                            - github-api
                            - github
                            - ghprb
                            - jquery
                            - backup
                            - mailer
                            - javadoc
                            - maven-plugin
                            - violations
                            - dashboard-view
                            - buildgraph-view
                            - parameterized-trigger
                            - build-pipeline-plugin
                            - jclouds-jenkins
                            - simple-theme-plugin
            private_key:
                get_attr:
                    - ssh_key
                    - private_key
            host:
                get_attr:
                    - jenkins_server
                    - accessIPv4
            chef_version:
                get_param: chef_version
            kitchen:
                get_param: kitchen


