parameter_groups:
    -
        parameters:
            - flavor
            - image
        label: 'Server Settings'
    -
        parameters:
            - ansible_tower_tarball
            - server_name
        label: rax-dev-params
heat_template_version: '2013-05-23'
description: "A template that deploys Ansible Tower onto a single Linux server.\n"
parameters:
    flavor:
        default: '1 GB General Purpose v1'
        label: 'Server Size'
        type: string
        description: "Rackspace Cloud Server flavor to use. The size is based on the amount of\nRAM for the provisioned server.\n"
        constraints:
            -
                description: 'must be a valid Rackspace Cloud Server flavor.'
                allowed_values:
                    - '1 GB General Purpose v1'
                    - '2 GB General Purpose v1'
                    - '4 GB General Purpose v1'
                    - '8 GB General Purpose v1'
                    - '15 GB I/O v1'
                    - '30 GB I/O v1'
                    - '1GB Standard Instance'
                    - '2GB Standard Instance'
                    - '4GB Standard Instance'
                    - '8GB Standard Instance'
                    - '15GB Standard Instance'
                    - '30GB Standard Instance'
    ansible_tower_tarball:
        default: "http://releases.ansible.com/ansible-tower/setup/ansible-tower-setup-latest.tar.gz\n"
        type: string
        description: 'Location of the Ansible Tower installer'
        label: 'Ansible Tarball'
    image:
        default: 'Ubuntu 14.04 LTS (Trusty Tahr)'
        label: 'Operating System'
        type: string
        description: "Server image used for all servers that are created as a part of this\ndeployment\n"
        constraints:
            -
                description: 'Must be a supported operating system.'
                allowed_values:
                    - 'Ubuntu 14.04 LTS (Trusty Tahr)'
    server_name:
        default: ansible-tower
        type: string
        description: 'The instance name'
        label: 'Server Hostname'
outputs:
    private_key:
        description: 'SSH Private Key'
        value:
            get_attr:
                - ssh_key
                - private_key
    ansible_password:
        description: 'Admin Password'
        value:
            get_attr:
                - ansible_admin_pass
                - value
    ansible_url:
        description: 'Tower URL'
        value:
            str_replace:
                params:
                    '%server_ip%':
                        get_attr:
                            - ansible_tower
                            - accessIPv4
                template: 'https://%server_ip%'
    server_ip:
        description: 'Server IP'
        value:
            get_attr:
                - ansible_tower
                - accessIPv4
    ansible_username:
        description: 'Admin Username'
        value: admin
resources:
    postgres_admin_pass:
        type: 'OS::Heat::RandomString'
        properties:
            length: 16
            sequence: lettersdigits
    munin_admin_pass:
        type: 'OS::Heat::RandomString'
        properties:
            length: 16
            sequence: lettersdigits
    ansible_tower:
        type: 'Rackspace::Cloud::Server'
        properties:
            flavor:
                get_param: flavor
            name:
                get_param: server_name
            key_name:
                get_resource: ssh_key
            image:
                get_param: image
            user_data:
                str_replace:
                    params:
                        '%postgres_admin_pass%':
                            get_attr:
                                - postgres_admin_pass
                                - value
                        '%server_name%':
                            get_param: server_name
                        '%ansible_admin_pass%':
                            get_attr:
                                - ansible_admin_pass
                                - value
                        '%rabbitmq_admin_pass%':
                            get_attr:
                                - rabbitmq_admin_pass
                                - value
                        '%ansible_tower_tarball%':
                            get_param: ansible_tower_tarball
                        '%munin_admin_pass%':
                            get_attr:
                                - munin_admin_pass
                                - value
                    template: "#!/bin/bash -v\nset -e\n# Install dependencies\napt-get install python-dev python-yaml python-paramiko python-jinja2 python-pip -y\npip install ansible\n# Pull and extract the installer\nwget -ct0 %ansible_tower_tarball%\ntar xzf ansible-tower-setup-latest.tar.gz\n# Modify groupvars\nsed -i 's/pg_password: AWsecret/pg_password: %postgres_admin_pass%/' ansible-tower*/group_vars/all\nsed -i 's/admin_password: password/admin_password: %ansible_admin_pass%/' ansible-tower*/group_vars/all\nsed -i 's/rabbitmq_password: \"AWXbunnies\"/rabbitmq_password: \"%rabbitmq_admin_pass%\"/' ansible-tower*/group_vars/all\nsed -i 's/munin_password: password/munin_password: %munin_admin_pass%/' ansible-tower*/group_vars/all\nsed -i 's/httpd_server_name: localhost/httpd_server_name: %server_name%/' ansible-tower*/group_vars/all\nsed -i 's/ - localhost/ - %server_name%/' ansible-tower*/group_vars/all\n# Copy everything to working directory and install\ncd ansible-tower*\n./setup.sh\nufw allow 443\n"
            metadata:
                rax-heat:
                    get_param: 'OS::stack_id'
    rabbitmq_admin_pass:
        type: 'OS::Heat::RandomString'
        properties:
            length: 16
            sequence: lettersdigits
    ansible_admin_pass:
        type: 'OS::Heat::RandomString'
        properties:
            length: 16
            sequence: lettersdigits
    ssh_key:
        type: 'OS::Nova::KeyPair'
        properties:
            name:
                get_param: 'OS::stack_id'
            save_private_key: true


