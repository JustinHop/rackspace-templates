parameter_groups:
    -
        parameters:
            - flavor
            - es_node_count
        label: 'Server Settings'
    -
        parameters:
            - es_auth_user
        label: 'Elasticsearch Settings'
    -
        parameters:
            - load_balancer_hostname
            - server_hostname
            - child_template
            - kitchen
            - chef_version
        label: rax-dev-params
heat_template_version: '2013-05-23'
description: "This is a Heat template to deploy an elasticsearch cluster on the\nRackspace Cloud.\n"
parameters:
    server_hostname:
        default: elasticsearch-%index%
        type: string
        description: 'Hostname for the servers'
        label: 'Server Name'
    load_balancer_hostname:
        default: elasticsearch-lb
        type: string
        description: 'Hostname for load balancer'
        label: 'Load Balancer Name'
    es_node_count:
        default: 2
        type: number
        description: 'Number of Elasticsearch nodes to create'
        label: 'Number of Servers'
    child_template:
        default: 'https://raw.githubusercontent.com/rackspace-orchestration-templates/elasticsearch/master/elasticsearch_node.yaml'
        type: string
        description: "URL to the Child template that will provision Elasticsearch nodes.\n"
        label: 'Child Template'
    es_auth_user:
        default: es_user
        type: string
        description: "User name for authentication with the Elasticsearch endpoint. A password\nwill be automatically generated.\n"
        label: Username
    flavor:
        default: '2 GB General Purpose v1'
        label: 'Server Size'
        type: string
        description: "Rackspace Cloud Server flavor to use. The size is based on the amount of\nRAM for the provisioned server.\n"
        constraints:
            -
                description: "Must be a valid Rackspace Cloud Server flavor for the region you have\nselected to deploy into.\n"
                allowed_values:
                    - '2 GB General Purpose v1'
                    - '4 GB General Purpose v1'
                    - '8 GB General Purpose v1'
                    - '15 GB I/O v1'
                    - '30 GB I/O v1'
                    - '512MB Standard Instance'
                    - '1GB Standard Instance'
                    - '2GB Standard Instance'
                    - '4GB Standard Instance'
                    - '8GB Standard Instance'
                    - '15GB Standard Instance'
                    - '30GB Standard Instance'
    chef_version:
        default: 11.12.8
        type: string
        description: 'Version of chef client to use'
        label: 'Chef Version'
    kitchen:
        default: 'https://github.com/rackspace-orchestration-templates/elasticsearch'
        type: string
        description: 'URL for the kitchen to use'
        label: Kitchen
outputs:
    es_url:
        description: 'Elasticsearch URL'
        value:
            str_replace:
                params:
                    '%server_ip%':
                        get_attr:
                            - load_balancer
                            - PublicIp
                template: 'http://%server_ip%:8080'
    private_key:
        description: 'SSH Private Key'
        value:
            get_attr:
                - ssh_key
                - private_key
    load_balancer_ip:
        description: 'Load Balancer IP'
        value:
            get_attr:
                - load_balancer
                - PublicIp
    es_auth_user:
        description: 'Elasticsearch Admin User'
        value:
            get_param: es_auth_user
    es_server_ips:
        description: 'Elasticsearch Server IPs'
        value:
            get_attr:
                - es_nodes
                - es_server_ip
    es_password:
        description: 'Elasticsearch Admin Password'
        value:
            get_attr:
                - es_password
                - value
resources:
    load_balancer:
        depends_on:
            - es_nodes
        type: 'Rackspace::Cloud::LoadBalancer'
        properties:
            protocol: HTTP
            name:
                get_param: load_balancer_hostname
            algorithm: ROUND_ROBIN
            virtualIps:
                -
                    ipVersion: IPV4
                    type: PUBLIC
            contentCaching: DISABLED
            healthMonitor:
                delay: 10
                attemptsBeforeDeactivation: 1
                type: CONNECT
                timeout: 5
            nodes:
                -
                    addresses:
                        get_attr:
                            - es_nodes
                            - es_private_ip
                    condition: ENABLED
                    port: 8080
            port: 8080
    es_network:
        type: 'Rackspace::Cloud::Network'
        properties:
            cidr: 192.168.134.0/24
            label: es_network
    es_nodes:
        type: 'OS::Heat::ResourceGroup'
        properties:
            count:
                get_param: es_node_count
            resource_def:
                type:
                    get_param: child_template
                properties:
                    server_hostname:
                        get_param: server_hostname
                    es_network_id:
                        get_resource: es_network
                    stack_id:
                        get_param: 'OS::stack_id'
                    es_password:
                        get_attr:
                            - es_password
                            - value
                    ssh_keypair_name:
                        get_resource: ssh_key
                    ssh_private_key:
                        get_attr:
                            - ssh_key
                            - private_key
                    es_auth_user:
                        get_param: es_auth_user
                    flavor:
                        get_param: flavor
                    chef_version:
                        get_param: chef_version
                    kitchen:
                        get_param: kitchen
    ssh_key:
        type: 'OS::Nova::KeyPair'
        properties:
            name:
                get_param: 'OS::stack_id'
            save_private_key: true
    es_password:
        type: 'OS::Heat::RandomString'
        properties:
            length: 16
            sequence: lettersdigits


