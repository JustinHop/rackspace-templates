heat_template_version: 2013-05-23

description: Staging Environment on Prod Rackspace Account

parameters:

  salt_config_script:
    description: User Data script to configure salt and get it going
    type: string
    default: |
      #!/bin/bash -x
      exec 2>&1
      exec 1>/var/log/bootstrap-debug.log
      ps auxwwef
      sleep 120
      echo after sleep
      ps auxwwef
      userdel ubuntu
      groupdel ubuntu
      rm -f /var/lib/dpkg/lock
      mkdir -p /var/lib/cloud/data
      hostname | tee /var/lib/cloud/data/previous-hostname
      export DEBIAN_FRONTEND=noninteractive
      curl -L https://bootstrap.pypa.io/get-pip.py | python
      sleep 5s
      pip install pyrax
      curl -L https://bootstrap.saltstack.com | sh -s -- -A master1.salt.prod1.crowdrise.io -U -P git 2014.7 2>&1 | tee -a /var/log/bootstrap.log
      ( salt-call saltutil.sync_all || true ) | tee -a /var/log/bootstrap.log
      ( salt-call state.top tops/mintop.sls || true ) | tee -a /var/log/bootstrap.log
      ( salt-call state.highstate || true ) | tee -a /var/log/bootstrap.log
      service salt-minion stop
      rm -rf /var/cache/salt
      service salt-minion start
      ( salt-call state.highstate || true ) | tee -a /var/log/bootstrap.log
      ( salt-call state.highstate || true ) | tee -a /var/log/bootstrap.log
      if ! [ -f /var/log/firstboot ]; then
        touch /var/log/firstboot
        reboot
      fi

  sphinx_name:
    description: base name for the web server instances
    type: string
    default: sphinx

  sphinx_name_end:
    description: base name for the web server instances
    type: string
    default: .search.stage1.crowdrise.io

  sphinx_image:
    type: string
    label: sphinx Server OS Image
    description: Operating system for VM
    default: 'Ubuntu 14.10 (Utopic Unicorn) (PVHVM)'
    constraints:
      -
        allowed_values:
          - 'Ubuntu 14.10 (Utopic Unicorn) (PVHVM)'
          - 'Ubuntu 14.10 (Utopic Unicorn)'
          - 'Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)'
          - 'Ubuntu 14.04 LTS (Trusty Tahr)'
          - 'Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)'
          - 'Ubuntu 12.04 LTS (Precise Pangolin)'

  sphinx_flavor:
    type: string
    label: Image Flavor
    description: sphinx Server VM Flavor
    default: '4GB Standard Instance'
    constraints:
      -
        allowed_values:
          - '4GB Standard Instance'
          - '8GB Standard Instance'
          - '3.75 GB Compute v1'
          - '7.5 GB Compute v1'
          - '4 GB General Purpose v1'
          - '4 GB Performance'
          - '8 GB Performance'
          - '15 GB Performance'

  sphinx_number:
    default: 1
    label: 'sphinx Servers'
    type: number
    description: 'Number of sphinx Servers to deploy.'
    constraints:
      -
        range:
          max: 5
          min: 1
        description: 'Must be between 1 and 5 servers'
  sql_name:
    description: base name for the web server instances
    type: string
    default: sql

  redis_name:
    description: base name for the web server instances
    type: string
    default: redis

  redis_name_end:
    description: base name for the web server instances
    type: string
    default: .cache.stage1.crowdrise.io

  redis_image:
    type: string
    label: Redis Server OS Image
    description: Operating system for VM
    default: 'Ubuntu 14.10 (Utopic Unicorn) (PVHVM)'
    constraints:
      -
        allowed_values:
          - 'Ubuntu 14.10 (Utopic Unicorn) (PVHVM)'
          - 'Ubuntu 14.10 (Utopic Unicorn)'
          - 'Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)'
          - 'Ubuntu 14.04 LTS (Trusty Tahr)'
          - 'Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)'
          - 'Ubuntu 12.04 LTS (Precise Pangolin)'

  redis_flavor:
    type: string
    label: Image Flavor
    description: Redis Server VM Flavor
    default: '8 GB Performance'
    constraints:
      -
        allowed_values:
          - '4GB Standard Instance'
          - '8GB Standard Instance'
          - '3.75 GB Compute v1'
          - '7.5 GB Compute v1'
          - '4 GB General Purpose v1'
          - '4 GB Performance'
          - '8 GB Performance'
          - '15 GB Performance'

  redis_number:
    default: 2
    label: 'Redis Servers'
    type: number
    description: 'Number of Redis Servers to deploy.'
    constraints:
      -
        range:
          max: 3
          min: 0
        description: 'Must be between 0 and 3 servers'

  web_name:
    description: base name for the web server instances
    type: string
    default: http

  web_name_end:
    description: base name for the web server instances
    type: string
    default: .www.stage1.crowdrise.io

  web_image:
    type: string
    label: Apache Server OS Image
    description: Operating system for VM
    default: 'Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)'
    constraints:
      -
        allowed_values:
          - 'Ubuntu 14.10 (Utopic Unicorn) (PVHVM)'
          - 'Ubuntu 14.10 (Utopic Unicorn)'
          - 'Ubuntu 14.04 LTS (Trusty Tahr) (PVHVM)'
          - 'Ubuntu 14.04 LTS (Trusty Tahr)'
          - 'Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)'
          - 'Ubuntu 12.04 LTS (Precise Pangolin)'

  web_flavor:
    type: string
    label: VM Flavor
    description: Apache Server VM Flavor
    default: '8 GB Performance'
    constraints:
      -
        allowed_values:
          - '4GB Standard Instance'
          - '8GB Standard Instance'
          - '3.75 GB Compute v1'
          - '7.5 GB Compute v1'
          - '4 GB General Purpose v1'
          - '4 GB Performance'
          - '8 GB Performance'
          - '15 GB Performance'

  web_number:
    default: 2
    label: 'Apache Servers'
    type: number
    description: 'Number of Apache Servers to deploy.'
    constraints:
      -
        range:
          max: 10
          min: 0
        description: 'Must be between 0 and 10 servers'

resources:
  webservers:
    type: 'OS::Heat::ResourceGroup'
    properties:
      count:
        get_param: web_number
      resource_def:
        type: 'Rackspace::Cloud::Server'
        properties:
          flavor:
            get_param: web_flavor
          name:
            str_replace:
              template: $front%index%$back
              params:
                $front: { get_param: web_name }
                $back: { get_param: web_name_end }
          key_name: hop-2048
          image:
            get_param: web_image
          user_data: { get_param: salt_config_script }
          metadata:
            rax-heat: { get_param: "OS::stack_id" }
            stack-name: { get_param: "OS::stack_name" }
  web_lb:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
      - webservers
    properties:
      name:
        str_replace:
          template: $front$back
          params:
            $front: { get_param: web_name }
            $back: { get_param: web_name_end }
      nodes:
        -
          addresses:
            get_attr:
              - webservers
              - accessIPv4
          port: 443
        condition: enabled
      healthMonitor:
        type: HTTPS
        delay: 10
        timeout: 5
        attemptsBeforeDeactivation: 3
      port: 443
      protocol: HTTPS
      algorithm: ROUND_ROBIN
      virtualIps:
      - type: PUBLIC
        ipVersion: IPV4
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
  sphinxservers:
    type: 'OS::Heat::ResourceGroup'
    properties:
      count:
        get_param: sphinx_number
      resource_def:
        type: 'Rackspace::Cloud::Server'
        properties:
          flavor:
            get_param: sphinx_flavor
          name:
            str_replace:
              template: $front%index%$back
              params:
                $front: { get_param: sphinx_name }
                $back: { get_param: sphinx_name_end }
          key_name: hop-2048
          image:
            get_param: sphinx_image
          user_data: { get_param: salt_config_script }
          metadata:
            rax-heat: { get_param: "OS::stack_id" }
            stack-name: { get_param: "OS::stack_name" }
  sphinx_lb:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
      - sphinxservers
    properties:
      name:
        str_replace:
          template: $front$back
          params:
            $front: { get_param: sphinx_name }
            $back: { get_param: sphinx_name_end }
      nodes:
      - addresses: [ { get_attr: [sphinxservers, accessIPv4] } ]
        port: 9312
        condition: enabled
      healthMonitor:
        type: CONNECT
        delay: 10
        timeout: 10
        attemptsBeforeDeactivation: 2
      port: 9312
      protocol: TCP_CLIENT_FIRST
      algorithm: ROUND_ROBIN
      virtualIps:
      - type: SERVICENET
        ipVersion: IPV4
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
  sqlservers:
    type: 'OS::Heat::ResourceGroup'
    properties:
      count:
        get_param: sql_number
      resource_def:
        type: 'Rackspace::Cloud::Server'
        properties:
          flavor:
            get_param: sql_flavor
          name:
            str_replace:
              template: $front%index%$back
              params:
                $front: { get_param: sql_name }
                $back: { get_param: sql_name_end }
          key_name: hop-2048
          image:
            get_param: sql_image
          user_data: { get_param: salt_config_script }
          metadata:
            rax-heat: { get_param: "OS::stack_id" }
            stack-name: { get_param: "OS::stack_name" }
  sql_lb:
    type: "Rackspace::Cloud::LoadBalancer"
    depends_on:
      - sqlservers
    properties:
      name:
        str_replace:
          template: $front$back
          params:
            $front: { get_param: sql_name }
            $back: { get_param: sql_name_end }
      nodes:
      - addresses: [ { get_attr: [sqlservers, accessIPv4] } ]
        port: 3306
        condition: enabled
      healthMonitor:
        type: CONNECT
        delay: 10
        timeout: 5
        attemptsBeforeDeactivation: 3
      port: 3306
      protocol: MYSQL
      algorithm: ROUND_ROBIN
      virtualIps:
      - type: SERVICENET
        ipVersion: IPV4
      metadata:
        rax-heat: { get_param: "OS::stack_id" }
        stack-name: { get_param: "OS::stack_name" }
  redisservers:
    type: 'OS::Heat::ResourceGroup'
    properties:
      count:
        get_param: redis_number
      resource_def:
        type: 'Rackspace::Cloud::Server'
        properties:
          flavor:
            get_param: redis_flavor
          name:
            str_replace:
              template: $front%index%$back
              params:
                $front: { get_param: redis_name }
                $back: { get_param: redis_name_end }
          key_name: hop-2048
          image:
            get_param: redis_image
          user_data: { get_param: salt_config_script }
          metadata:
            rax-heat: { get_param: "OS::stack_id" }
            stack-name: { get_param: "OS::stack_name" }

outputs:
  web_resources:
    description: "Web Server Details"
    value: { get_attr: [ webservers, refs ] }
  web_lb_resources:
    description: "Web LB Details"
    value:
      get_attr:
        - web_lb
        - PublicIp
  sql_resources:
    description: "SQL Server Details"
    value: { get_attr: [ sqlservers, refs ] }
  redis_resources:
    description: "Redis Server Details"
    value: { get_attr: [ redisservers, refs ] }
  sphinx_resources:
    description: "Sphinx Server Details"
    value: { get_attr: [ sphinxservers, refs ] }
